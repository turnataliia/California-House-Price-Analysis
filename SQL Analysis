-- Retrieving a sample of the data
SELECT *
FROM housing
LIMIT 10;

-- Counting missing values in each column
SELECT 
    SUM(CASE WHEN longitude IS NULL THEN 1 ELSE 0 END) AS missing_longitude,
    SUM(CASE WHEN latitude IS NULL THEN 1 ELSE 0 END) AS missing_latitude,
    SUM(CASE WHEN housing_median_age IS NULL THEN 1 ELSE 0 END) AS missing_housing_median_age,
    SUM(CASE WHEN total_rooms IS NULL THEN 1 ELSE 0 END) AS missing_total_rooms,
    SUM(CASE WHEN total_bedrooms IS NULL THEN 1 ELSE 0 END) AS missing_total_bedrooms,
    SUM(CASE WHEN population IS NULL THEN 1 ELSE 0 END) AS missing_population,
    SUM(CASE WHEN households IS NULL THEN 1 ELSE 0 END) AS missing_households,
    SUM(CASE WHEN median_income  IS NULL THEN 1 ELSE 0 END) AS missing_median_income,
    SUM(CASE WHEN median_house_value  IS NULL THEN 1 ELSE 0 END) AS missing_median_house_value,
    SUM(CASE WHEN ocean_proximity  IS NULL THEN 1 ELSE 0 END) AS missing_ocean_proximity
FROM housing;

-- Checking the number of rows and columns in the dataset
SELECT COUNT(*) AS total_rows, COUNT(*) AS total_columns
FROM housing;

-- Calculating summary statistics for numerical columns
SELECT 
    MIN(median_house_value) AS min_house_value,
    MAX(median_house_value) AS max_house_value,
    AVG(median_house_value) AS avg_house_value,
    COUNT(*) AS total_records
FROM housing;

-- Calculating average housing prices by ocean_proximity
SELECT 
    ocean_proximity,
    AVG(median_house_value) AS avg_house_value
FROM housing
GROUP BY ocean_proximity;




